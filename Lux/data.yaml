synonyms:
  is: is
  are: is
  am: is
  'on': at
  from: of
  learn: study
  class: subject
  my: user
  me: user
  i: user
  mine: user
  his: someone
  her: someone
  population: people
  place: location
  classmate: groupmate
  audience: room
  classroom: room
  auditorium: auditory
  tell: say
  write: say
  clarify: say
  help: say
concats:
  - study with
  - intelligent systems
  - programming languages
  - programming fundamentals
  - functional programming
rules:
  - has(Entity,_,carnivore,_,_) :- eat(Entity, _, meat, _, _)
  - has(Entity,_,herbivore,_,_) :- eat(Entity, _, plants, _, _)


  - touch(user, _, grass, _, _)

  - has(tiger, _, carnivore, _, _)
  - has(tiger, _, stripes, _, _)
  - has(tiger, _, yellow, _, _)
  - has(Entity,_,tiger,_,_) :- has(Entity,_,carnivore,_,_), has(Entity,_,yellow,_,_), has(Entity,_,stripes,_,_)

  - has(elephant, _, herbivore, _, _)
  - has(elephant, _, grey, _, _)
  - has(elephant, _, trunk, _, _)
  - has(Entity,_,elephant,_,_) :- has(Entity,_,herbivore,_,_), has(Entity,_,grey,_,_), has(Entity,_,trunk,_,_)

  - has(pig, _, carnivore, _, _)
  - has(pig, _, herbivore, _, _)
  - has(pig, _, pink, _, _)
  - has(pig, _, snout, _, _)
  - has(Entity,_,pig,_,_) :- has(Entity,_,herbivore,_,_), has(Entity,_,pink,_,_), has(Entity,_,snout,_,_)

  - has(lion, _, carnivore, _, _)
  - has(lion, _, mane, _, _)
  - has(lion, _, yellow, _, _)
  - has(Entity,_,lion,_,_) :- has(Entity,_,carnivore,_,_), has(Entity,_,yellow,_,_), has(Entity,_,mane,_,_)

  - has(bear, _, carnivore, _, _)
  - has(bear, _, herbivore, _, _)
  - has(bear, _, brown, _, _)
  - has(bear, _, claws, _, _)
  - has(Entity,_,bear,_,_) :- has(Entity,_,omnivore,_,_), has(Entity,_,brown,_,_), has(Entity,_,claws,_,_)

  - has(deer, _, herbivore, _, _)
  - has(deer, _, antlers, _, _)
  - has(deer, _, brown, _, _)
  - has(Entity,_,deer,_,_) :- has(Entity,_,herbivore,_,_), has(Entity,_,brown,_,_), has(Entity,_,antlers,_,_)


  - has(Entity,_,omnivore,_,_) :- has(Entity,_,carnivore,_,_), has(Entity,_,herbivore,_,_)

  - study(Person, _, Subject, Article, Addition) :- enrolled(Person, _, _, in, Faculty), offer(Faculty, _, Subject, Article, Addition)
  - study_with(Person, _, Other, _, _) :- enrolled(Person, _, _, in, Faculty), enrolled(Other, _, _, in, Faculty), neq(Person, Other)
  - has(Person, _, programmer, _, _ ) :- enrolled(Person, _, _, in, bics)
  - enrolled(inna, _, _, in, bics)
  - enrolled(adelaide, _, _, in, bics)
  - enrolled(andrey, _, _, in, bics)
  - enrolled(vitaliy, _, _, in, bics)
  - enrolled(marine, _, _, in, bmed)
  - enrolled(house, _, _, in, bmed) 
  - offer(bics, _, intelligent_systems, at, wednesday)
  - offer(bics, _, functional_programming, at, wednesday)
  - offer(bics, _, programming_languages, at, friday)
  - offer(bics, _, programming_fundamentals, at, monday)
  - offer(bics, _, programming_fundamentals, at, tuesday)
  - offer(bics, _, intelligent_systems, in, 4160)
  - offer(bics, _, programming_languages, in, 4510)
  - offer(bics, _, programming_fundamentals, in, 4020)
  - offer(bics, _, programming_fundamentals, in, 3200)
  - teach(alswaitti_mohammed, _, intelligent_systems, _, _)
  - teach(krishnasamy_ezhilmathi, _, intelligent_systems, _, _)
  - teach(herter_joerg, _, programming_languages, _, _)
  - teach(bianculi_domenico, _, programming_fundamentals, _, _)




